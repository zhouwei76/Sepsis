


library(dplyr)
library(data.table)
library(coloc)
library(VariantAnnotation)
library(gwasglue)
library(locuscomparer)


PPH4filter=0.8                         
outcomeFile="outcome.csv"  
drugFile="sig.IEUid.txt"          


setwd("Working path")
drugRT=read.table(drugFile, header=T, sep="\t", check.names=F)
row.names(drugRT)=drugRT[,"id"]


allVcf=list.files(pattern="*.vcf.gz$")
outTab=data.frame()
for (eqtlFile in allVcf) {
  tryCatch({
    
    eqtlID <- gsub(".vcf.gz", "", eqtlFile)
    geneChr <- drugRT[eqtlID, "Chr"]
    geneStart <- drugRT[eqtlID, "Start"]
    geneEnd <- drugRT[eqtlID, "End"]
    geneName <- drugRT[eqtlID, "Symbol"]
    
 
    vcfRT <- readVcf(eqtlFile)
    data1 <- gwasvcf_to_TwoSampleMR(vcf = vcfRT, type = "exposure")
    

    data2 <- data1 %>% dplyr::select("SNP", "chr.exposure", "pos.exposure", "effect_allele.exposure",
                                     "other_allele.exposure", "eaf.exposure", "beta.exposure",
                                     "se.exposure", "pval.exposure", "samplesize.exposure")
    colnames(data2) <- c("SNP", "chrom", "Pos", "effect_allele", "other_allele",
                         "MAF", "beta", "se", "P", "samplesize")
    

    data3 <- as.data.frame(data2)
    data3$varbeta <- data3$se^2
    data3$z <- data3$beta / data3$se
    data3 <- subset(data3, !duplicated(SNP))
    geneData <- data3 %>% filter(chrom == geneChr, Pos > geneStart - 100000, Pos < geneEnd + 100000) %>% na.omit()
    lead <- geneData %>% dplyr::arrange(P)
    leadPos <- lead$Pos[1]
    QTLdata <- geneData %>% filter(Pos > leadPos - 50000, Pos < leadPos + 50000) %>% na.omit()
    

    data0 <- fread(outcomeFile, data.table = F)
    data0$ncase.outcome <- 11643
    data0$ncontrol.outcome <- 474841
    data0$samplesize.outcome <- 486484
    

    data1 <- data0 %>% dplyr::select("SNP", "chr.outcome", "pos.outcome", "effect_allele.outcome", "other_allele.outcome",
                                     "eaf.outcome", "beta.outcome", "se.outcome", "pval.outcome", "samplesize.outcome", "ncase.outcome")
    colnames(data1) <- c('SNP', 'chrom', "pos", 'effect_allele', 'other_allele',
                         "eaf", "beta", "se", "P", "samplesize", "number_cases")
    data2 <- as.data.frame(data1)
    data2$varbeta <- data2$se^2
    data2$MAF <- ifelse(data2$eaf < 0.5, data2$eaf, 1 - data2$eaf)
    data3 <- subset(data2, !duplicated(SNP))
    data3$s <- data3$number_cases / data3$samplesize
    data3$z <- data3$beta / data3$se
    GWASdata <- data3 %>% na.omit()
    
 
    sameSNP <- intersect(QTLdata$SNP, GWASdata$SNP)
    QTLdata <- QTLdata[QTLdata$SNP %in% sameSNP, ] %>% dplyr::arrange(SNP) %>% na.omit()
    GWASdata <- GWASdata[GWASdata$SNP %in% sameSNP, ] %>% dplyr::arrange(SNP) %>% na.omit()
    coloc_data <- list(dataset1 = list(snp = QTLdata$SNP, beta = QTLdata$beta, varbeta = QTLdata$varbeta,
                                       N = QTLdata$samplesize, MAF = QTLdata$MAF, z = QTLdata$z,
                                       pvalues = QTLdata$P, type = "quant"),
                       dataset2 = list(snp = GWASdata$SNP, beta = GWASdata$beta, varbeta = GWASdata$varbeta,
                                       N = GWASdata$samplesize, MAF = GWASdata$MAF, z = GWASdata$z,
                                       pvalues = GWASdata$P, type = "cc"))
    result <- coloc.abf(dataset1 = coloc_data$dataset1, dataset2 = coloc_data$dataset2)
    

    result$results %>% dplyr::arrange(desc(SNP.PP.H4))
    if (result$summary[6] >= PPH4filter) {
      outTab <- rbind(outTab, data.frame(ID = eqtlID,
                                         Symbol = geneName,
                                         PP.H0 = result$summary[2],
                                         PP.H1 = result$summary[3],
                                         PP.H2 = result$summary[4],
                                         PP.H3 = result$summary[5],
                                         PP.H4 = result$summary[6]))
      

      GWAS_fn <- GWASdata[, c('SNP', 'P')] %>% dplyr::rename(rsid = SNP, pval = P)
      pqtl_fn <- QTLdata[, c('SNP', 'P')] %>% dplyr::rename(rsid = SNP, pval = P)
      pdf(file = paste0(eqtlID, ".", geneName, ".pdf"), width = 8, height = 6)
      print(locuscompare(in_fn1 = GWAS_fn,
                         in_fn2 = pqtl_fn,
                         snp = NULL,
                         title1 = 'GWAS',
                         title2 = 'pqtl'))
      dev.off()
    }
  }, error = function(e) {
    message("Error in file: ", eqtlFile, " - ", e$message)
  })
}

write.csv(outTab, file="coloc.result.csv", row.names=F)




